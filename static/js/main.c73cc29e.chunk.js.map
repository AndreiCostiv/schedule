{"version":3,"sources":["Firebase.js","Context/AuthContext.js","Routes/PrivateRoute/PrivateRoute.jsx","Components/UIComponents/Header.jsx","Components/MainHeader/MainHeader.jsx","Components/UIComponents/Input.jsx","Components/UIComponents/Button.jsx","Hooks/useFirebase.js","Components/NewTodoItem/NewTodoItem.jsx","Components/TodoItem/TodoItem.jsx","Components/TasksViewer/TaskViewer.jsx","Routes/Home/Home.jsx","Components/AuthLinks/AuthLinks.jsx","Components/AuthErrors/AuthErrors.jsx","Routes/Auth/SignUp.jsx","Routes/Auth/LogIn.jsx","Routes/About/About.jsx","Routes/Settings/Settings.jsx","App.jsx","serviceWorker.js","index.js","Icons/AboutUs.svg","Icons/Settings.svg","Icons/Sign_Out.svg","Icons/NewTask.svg","Icons/RemoveIcon.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","Header","size","MainHeader","className","src","AboutUs","alt","Settings","SignOut","onClick","signOut","Input","Button","type","useFirebase","SaveTask","e","data","setData","a","preventDefault","length","keyCode","currentTarget","ref","uid","push","task","ifFinished","listOrder","console","log","tasks","setTasks","getData","on","snapshot","receivedData","forEach","item","id","key","val","off","UpdateList","newData","set","UpdateItem","itemId","child","update","RemoveItem","remove","error","NewTodoItem","name","onChange","target","slice","OnChange","onKeyUp","autoComplete","NewTask","TodoItem","text","setText","draggable","onBlur","RemoveIcon","TaskViewer","map","Home","AuthLinks","activeClassName","AuthErrors","SingUp","email","setEmail","pass","setPass","emailError","setEmailError","passError","setPassError","signUpError","setSignUpError","IfPassTyped","arg","undefined","EmailValidator","validator","isEmail","PassValidator","SubmitHandler","useCallback","elements","emailInput","passInput","createUserWithEmailAndPassword","message","onSubmit","placeholder","LogIn","signInError","setSignInError","signInWithEmailAndPassword","About","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.c73cc29e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBj774na70sz8QHPSD5hQBraF9uGMW9Sww\",\r\n    authDomain: \"schedule-f4eee.firebaseapp.com\",\r\n    databaseURL: \"https://schedule-f4eee.firebaseio.com\",\r\n    projectId: \"schedule-f4eee\",\r\n    storageBucket: \"schedule-f4eee.appspot.com\",\r\n    messagingSenderId: \"1058621003364\",\r\n    appId: \"1:1058621003364:web:2627e01235b34e1bdc7171\",\r\n    measurementId: \"G-DHS9BMF46H\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\nconst db = firebase.database();\r\n\r\nexport {db}\r\nexport default firebase;","import React, {useState, useEffect, createContext} from 'react';\r\n\r\n//database:\r\nimport firebase from '../Firebase'\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    \r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [pending, setPending] = useState(null);\r\n    \r\n\tuseEffect(() => {\r\n\t\tfirebase.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user)\r\n            setPending(false)\r\n        });\r\n        \r\n    }, []);\r\n\r\n    if(pending){\r\n        return <>Loading...</>\r\n    }\r\n    else if(!pending){        \r\n        return(\r\n            <AuthContext.Provider\r\n                value = {{\r\n                    currentUser\r\n                }}\r\n            >\r\n            {children}\r\n            </AuthContext.Provider>\r\n        );\r\n    }\r\n};","import React, {useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n//context:\r\nimport {AuthContext} from '../../Context/AuthContext';\r\n\r\nconst PrivateRoute = ({component: RouteComponent, ...rest}) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n\t\t\t{...rest}\r\n\t\t\trender={routeProps =>\r\n\t\t\t\tcurrentUser ? (\r\n\t\t\t\t\t<RouteComponent {...routeProps} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to={'/log-in'} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\n\r\nconst Header = ({children, size, ...rest}) => {\r\n    return (\r\n        <>\r\n            {(size === 1) && (<h1 {...rest}> {children} </h1>)}\r\n            {(size === 2) && (<h2 {...rest}> {children} </h2>)}\r\n            {(size === 3) && (<h3 {...rest}> {children} </h3>)}\r\n            {(size === 4) && (<h4 {...rest}> {children} </h4>)}\r\n            {(size === 5) && (<h5 {...rest}> {children} </h5>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\n\r\n//style:\r\nimport './MainHeader.sass';\r\n\r\n//components:\r\nimport Header from '../UIComponents/Header';\r\n\r\n//icons:\r\nimport AboutUs from '../../Icons/AboutUs.svg';\r\nimport Settings from '../../Icons/Settings.svg';\r\nimport SignOut from '../../Icons/Sign_Out.svg';\r\n\r\nconst MainHeader = () => {\r\n    return (\r\n        <menu className = 'headerMenu'>\r\n            <NavLink to = '/' className = 'headerLink'>\r\n                <Header size = {1} className = 'headerTitle'>\r\n                    Schedule\r\n                </Header>\r\n            </NavLink>\r\n            \r\n            <NavLink to = '/about' className = 'headerIcon'>\r\n                <img \r\n                    src ={AboutUs}  \r\n                    alt = 'about' \r\n                    className = 'aboutIcon'\r\n                />\r\n            </NavLink>\r\n            \r\n            <NavLink to = '/settings' className = 'headerIcon'>\r\n                <img \r\n                    src ={Settings} \r\n                    alt = 'settings' \r\n                />\r\n            </NavLink>\r\n\r\n            <img \r\n                src ={SignOut} \r\n                alt = 'sing out'\r\n                className = 'headerIcon' \r\n                onClick = { () => firebase.auth().signOut()}\r\n            />\r\n        </menu>\r\n    );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from 'react'\r\n\r\nconst Input = ({...rest}) => {\r\n    return (\r\n        <input\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nconst Button = ({type, className, children, ...rest}) => {\r\n    return (\r\n        <button type = {type} className = {className} {...rest}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import {useState, useEffect, useContext} from 'react';\r\n\r\n//databse:\r\nimport {db} from '../Firebase';\r\n\r\n//context:\r\nimport {AuthContext} from '../Context/AuthContext';\r\n\r\nconst useFirebase = () => {\r\n    //getting details about user account:\r\n    const {currentUser} = useContext(AuthContext);\r\n    \r\n    //add new item into todo list:\r\n    const  SaveTask = async (e, data, setData) => {\r\n        e.preventDefault();\r\n\r\n        if( data.length > 0 & e.keyCode === 13 || e.currentTarget.type === 'submit'){            \r\n            try{\r\n                await db.ref(`${currentUser.uid}/tasks`).push({\r\n                    task: data,\r\n                    ifFinished: false,\r\n                    listOrder: false,\r\n                });\r\n                setData('');\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            };\r\n        }\r\n        else\r\n            return false;\r\n    };\r\n\r\n    //get todo list from database: \r\n    const [tasks, setTasks] = useState([]);   \r\n\r\n    const getData = async () => {\r\n        try {\r\n            await db.ref(`${currentUser.uid}/tasks`).on('value', snapshot => {\r\n                let receivedData = [];\r\n\r\n                snapshot.forEach(item => {\r\n                    receivedData.push({\r\n                        id: item.key,\r\n                        task: item.val().task,\r\n                        ifFinished: item.val().ifFinished,         \r\n                    })\r\n                });\r\n\r\n                setTasks(() => receivedData);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        return () => db.ref(`${currentUser.uid}/tasks`).off();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    //update list:\r\n    const UpdateList = async (newData) => {\r\n        try {\r\n            await db.ref(`${currentUser.uid}/tasks`).set(newData);\r\n            await setTasks(newData);            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    //update task:\r\n    const UpdateItem = async (itemId, newData) => {\r\n        try {\r\n            await db.ref(`${currentUser.uid}/tasks`).child(`${itemId}`).update({task: newData});            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // remove todo from list:\r\n    const RemoveItem = key => {\r\n        try {\r\n            db.ref(`${currentUser.uid}/tasks`).child(`${key}`).remove()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return ({\r\n        tasks,\r\n        setTasks,\r\n        UpdateList,\r\n        SaveTask,\r\n        UpdateItem,\r\n        RemoveItem\r\n    });\r\n};\r\n\r\nexport default useFirebase;","import React, {useState} from 'react';\r\n\r\n//components:\r\nimport Input from '../UIComponents/Input';\r\nimport Button from '../UIComponents/Button';\r\n\r\n//style:\r\nimport './NewTodoItem.sass';\r\n\r\n//icon:\r\nimport NewTask from '../../Icons/NewTask.svg';\r\nimport useFirebase from '../../Hooks/useFirebase';\r\n\r\nconst NewTodoItem = () => {\r\n    const [data, setData] = useState('');\r\n\r\n    const {SaveTask} = useFirebase();\r\n\r\n    const OnChange = (e) => {\r\n        if (e.target.value.length > 20)\r\n            setData(e.target.value.slice('0', '20'));\r\n        else\r\n            setData(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <section className = 'NewTodoItem'>\r\n            <Input \r\n                className = 'InputNewTodoItem' \r\n                value = {data} name = 'task'\r\n                onChange = {e => OnChange(e)} \r\n                onKeyUp = {e => SaveTask(e, data, setData)}\r\n                autoComplete = 'false'\r\n                type = 'text'\r\n            />\r\n\r\n            <Button \r\n                type = 'submit' \r\n                className = 'AddNewTask' \r\n                onClick = {e => SaveTask(e)} \r\n            >\r\n                <img \r\n                    src = {NewTask} \r\n                    alt = 'NewTask' \r\n                    className = 'AddNewTaskIcon'\r\n                />\r\n            </Button>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default NewTodoItem;","import React, {useState} from 'react';\r\n\r\n//style:\r\nimport './TodoItem.sass';\r\n\r\n//components:\r\nimport Input from '../UIComponents/Input';\r\n\r\n//icons:\r\n// import ToDo from '../../Icons/ToDo.svg';\r\nimport RemoveIcon from '../../Icons/RemoveIcon.svg';\r\n\r\nconst TodoItem = ({item, RemoveItem, UpdateItem}) => {\r\n    let {task} = item;\r\n    const [text, setText] = useState(task);\r\n\r\n    const OnChange = e => {\r\n        if (e.target.value.length > 20)  \r\n            setText(e.target.value.slice('0', '20'));\r\n        else\r\n            setText(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <section draggable = 'true' className = 'TodoItemLabel'>\r\n            {/* <img \r\n                src = {ToDo} \r\n                className = 'ToDoCheckedIcon' \r\n                alt = ''\r\n            /> */}\r\n\r\n            <Input \r\n                className = 'TodoItem' \r\n                value = {text} \r\n                type = 'text' \r\n                onChange = { e => OnChange(e)}\r\n                onBlur = { () => UpdateItem(item.id, text)}\r\n            />\r\n\r\n            <img \r\n                onClick = {() => RemoveItem(item.id)}\r\n                src = {RemoveIcon} \r\n                className = 'RemoveIcon' \r\n                alt = ''\r\n            />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\n\r\n//style:\r\nimport './TaskViewer.sass';\r\n\r\n//components:\r\nimport NewTodoItem from '../NewTodoItem/NewTodoItem';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\n\r\n//custom hook:\r\nimport useFirebase from '../../Hooks/useFirebase';\r\n\r\nconst TaskViewer = () => {\r\n    const {tasks, RemoveItem, UpdateItem} = useFirebase();\r\n    \r\n    return (\r\n        <section className = 'TaskViewer'>\r\n            \r\n            <section className = 'TodoList'>\r\n                {tasks.map( (item) =>\r\n                    <TodoItem\r\n                        item = {item} \r\n                        key = {item.id}\r\n                        RemoveItem = {RemoveItem}\r\n                        UpdateItem = {UpdateItem}\r\n                    />\r\n                )}\r\n            </section>\r\n\r\n            <NewTodoItem />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TaskViewer;","import React from 'react'\r\n\r\n// Route layout:\r\nimport '../RouteLayout.sass';\r\n\r\n// Components:\r\nimport MainHeader from '../../Components/MainHeader/MainHeader';\r\nimport TaskViewer from '../../Components/TasksViewer/TaskViewer';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <section className = 'RouteLayout'>\r\n            <MainHeader/>\r\n\r\n            <TaskViewer />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n//Styles:\r\nimport './AuthLinks.sass';\r\n\r\nconst AuthLinks = () => {\r\n    return (\r\n        <nav className = 'AuthLinks'>\r\n            <NavLink \r\n                className = 'AuthLink' \r\n                activeClassName = 'ActiveAuthLink'\r\n                to = 'log-in'\r\n            >\r\n                Log in\r\n            </NavLink>\r\n\r\n            <NavLink \r\n                className = 'AuthLink' \r\n                activeClassName = 'ActiveAuthLink'\r\n                to = 'sign-up'\r\n            >\r\n                Sign up  \r\n            </NavLink>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default AuthLinks;","import React from 'react';\r\n\r\nimport './AuthErrors.sass';\r\n\r\nconst AuthErrors = ({children}) => {\r\n    return (\r\n        <section className = 'AuthErors'>\r\n            {children}          \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AuthErrors;\r\n","import React, {useCallback, useContext, useState, useEffect} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport validator from 'validator';\r\n\r\n//Context:\r\nimport {AuthContext} from '../../Context/AuthContext';\r\n\r\n// Components:\r\nimport AuthLinks from '../../Components/AuthLinks/AuthLinks';\r\nimport Input from '../../Components/UIComponents/Input';\r\nimport AuthErrors from '../../Components/AuthErrors/AuthErrors';\r\nimport Button from '../../Components/UIComponents/Button'; \r\n\r\n//Style:\r\nimport './Auth.sass';\r\n\r\nconst SingUp = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passError, setPassError] = useState('');\r\n    const [signUpError, setSignUpError] = useState('');\r\n\r\n    const IfEmailTyped = (arg) => {\r\n        if(arg === undefined || arg.length === 0){\r\n            setEmailError('Email is required');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const IfPassTyped = (arg) => {\r\n        if(arg === undefined || arg.length === 0){\r\n            setPassError('Password is required');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const EmailValidator = (arg) => {\r\n        if(!validator.isEmail(arg)){\r\n            setEmailError('Enter valid email adress');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const PassValidator = (arg) => {\r\n        if(arg.length < 8 || arg.length > 20){\r\n            setPassError('Password should contain 8-20 symbols');\r\n        }\r\n        else\r\n            return(true);\r\n    };\r\n\r\n    const SubmitHandler = useCallback( \r\n        async e => {\r\n            e.preventDefault();\r\n            const {emailInput, passInput} = e.target.elements;\r\n            \r\n            EmailValidator(emailInput.value);\r\n            PassValidator(passInput.value);\r\n\r\n            if(\r\n                IfEmailTyped(emailInput.value) === false \r\n                || IfPassTyped(passInput.value) === false\r\n                || EmailValidator(emailInput.value) === false\r\n                || PassValidator(passInput.value) === false\r\n            ) \r\n                return false;\r\n            \r\n            try{\r\n                await firebase\r\n                    .auth()\r\n                    .createUserWithEmailAndPassword(emailInput.value, passInput.value);\r\n            }\r\n            catch (error){\r\n                setSignUpError(error.message)\r\n            }\r\n        },\r\n        []\r\n    );\r\n    \r\n    useEffect(() => {\r\n        EmailValidator(email);\r\n        PassValidator(pass);\r\n\r\n        if(email.length === 0 || pass.length === 0){\r\n            setEmailError('');\r\n            setPassError('');\r\n        }\r\n    }, [email, pass]);\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    if(currentUser) {\r\n        return(\r\n            <Redirect to = '/'/>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <form onSubmit = {SubmitHandler} className = 'AuthForm'>\r\n            <AuthLinks />\r\n\r\n            <Input \r\n                type = 'text' \r\n                name = 'emailInput' \r\n                className = 'AuthInput'\r\n                placeholder = 'email@temp.com'\r\n                value = {email}\r\n                onChange = {e => {\r\n                    setEmail(e.target.value)\r\n                }}\r\n            />\r\n\r\n            <AuthErrors>\r\n                {emailError}\r\n            </AuthErrors>\r\n\r\n            <Input \r\n                type = 'password' \r\n                name = 'passInput' \r\n                className = 'AuthInput'\r\n                placeholder = 'password'\r\n                value = {pass}\r\n                onChange = { e => setPass(e.target.value)}\r\n            />\r\n\r\n            <AuthErrors>\r\n                {passError}\r\n            </AuthErrors>\r\n\r\n            <AuthErrors>\r\n                {signUpError}\r\n            </AuthErrors>\r\n\r\n            <Button type = 'submit' className = 'AuthBtn'>\r\n                Log In\r\n            </Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default SingUp;","import React, {useState, useCallback, useContext, useEffect} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport validator from 'validator';\r\n\r\n//Context:\r\nimport {AuthContext} from '../../Context/AuthContext';\r\n\r\n//Components:\r\nimport AuthLinks from '../../Components/AuthLinks/AuthLinks';\r\nimport Input from '../../Components/UIComponents/Input';\r\nimport AuthErrors from '../../Components/AuthErrors/AuthErrors';\r\nimport Button from '../../Components/UIComponents/Button'; \r\n\r\n// Styles:\r\nimport './Auth.sass';\r\n\r\nconst LogIn = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passError, setPassError] = useState('');\r\n    const [signInError, setSignInError] = useState('');\r\n\r\n    const IfEmailTyped = (arg) => {\r\n        if(arg === undefined || arg.length === 0){\r\n            setEmailError('Email is required');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const IfPassTyped = (arg) => {\r\n        if(arg === undefined || arg.length === 0){\r\n            setPassError('Password is required');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const EmailValidator = (arg) => {\r\n        if(!validator.isEmail(arg)){\r\n            setEmailError('Enter valid email adress');\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    const PassValidator = (arg) => {\r\n        if(arg.length < 8 || arg.length > 20){\r\n            setPassError('Password should contain 8-20 symbols');\r\n        }\r\n        else\r\n            return(true);\r\n    };\r\n\r\n    const SubmitHandler = useCallback( \r\n        async e => {\r\n            e.preventDefault();\r\n            const {emailInput, passInput} = e.target.elements;\r\n            \r\n            if(\r\n                IfEmailTyped(emailInput.value) === false \r\n                || IfPassTyped(passInput.value) === false\r\n                || EmailValidator(emailInput.value) === false\r\n                || PassValidator(passInput.value) === false\r\n            ) \r\n                return false;\r\n\r\n            try{\r\n                await firebase\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(emailInput.value, passInput.value);\r\n            }\r\n            catch (error){\r\n                setSignInError(error.message);\r\n            };\r\n        }, []\r\n    ); \r\n\r\n    useEffect(() => {\r\n        EmailValidator(email);\r\n        PassValidator(pass);\r\n\r\n        if(email.length === 0 || pass.length === 0){\r\n            setEmailError('');\r\n            setPassError('');\r\n        }\r\n    }, [email, pass]);\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    if(currentUser) {\r\n        return(\r\n            <Redirect to = '/'/>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <form onSubmit = {SubmitHandler} className = 'AuthForm'>\r\n            <AuthLinks />\r\n\r\n            <Input \r\n                type = 'text' \r\n                name = 'emailInput' \r\n                className = 'AuthInput'\r\n                placeholder = 'email@temp.com'\r\n                value = {email}\r\n                onChange = {e => {\r\n                    setEmail(e.target.value)\r\n                }}\r\n            />\r\n\r\n            <AuthErrors>\r\n                {emailError}\r\n            </AuthErrors>\r\n            \r\n            <Input \r\n                type = 'password' \r\n                name = 'passInput' \r\n                className = 'AuthInput'\r\n                placeholder = 'password'\r\n                value = {pass}\r\n                onChange = { e => setPass(e.target.value)}\r\n            />\r\n\r\n            <AuthErrors>\r\n                {passError}\r\n            </AuthErrors>\r\n\r\n            <AuthErrors>\r\n                {signInError}\r\n            </AuthErrors>\r\n\r\n            <Button type = 'submit' className = 'AuthBtn'>\r\n                Log In\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LogIn;","import React from 'react';\r\n\r\n// Route layout:\r\nimport '../RouteLayout.sass';\r\n\r\n//Components:\r\nimport MainHeaderHeader from '../../Components/MainHeader/MainHeader';\r\n\r\nconst About = () => {\r\n    return (\r\n        <section className = 'RouteLayout'>\r\n            <MainHeaderHeader />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\n// Route layout:\r\nimport '../RouteLayout.sass';\r\n\r\n//Components:\r\nimport MainHeaderHeader from '../../Components/MainHeader/MainHeader';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <section className = 'RouteLayout'>\r\n            <MainHeaderHeader />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\n//Context:\r\nimport {AuthProvider} from './Context/AuthContext';\r\n\r\n//Styles:\r\nimport './App.sass';\r\n\r\n//Routes:\r\nimport PrivateRoute from './Routes/PrivateRoute/PrivateRoute';\r\nimport Home from './Routes/Home/Home';\r\nimport SingUp from './Routes/Auth/SignUp';\r\nimport LogIn from './Routes/Auth/LogIn';\r\nimport About from './Routes/About/About';\r\nimport Settings from './Routes/Settings/Settings';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<AuthProvider>\r\n\t\t\t<Router>\r\n\t\t\t\t<section className=\"App\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\texact path = '/'\r\n\t\t\t\t\t\t\tcomponent = {Home}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\tpath = '/about'\r\n\t\t\t\t\t\t\tcomponent = {About}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\tpath = '/settings'\r\n\t\t\t\t\t\t\tcomponent = {Settings}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Route \r\n\t\t\t\t\t\t\tpath = '/sign-up' \r\n\t\t\t\t\t\t\tcomponent = {SingUp}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath='/log-in'\r\n\t\t\t\t\t\t\tcomponent = {LogIn}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</section>\t\t\r\n\t\t\t</Router>\r\n\t\t</AuthProvider>  \r\n\t);\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/AboutUs.7b6f6b46.svg\";","module.exports = __webpack_public_path__ + \"static/media/Settings.27f7ef71.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sign_Out.b2666e26.svg\";","module.exports = __webpack_public_path__ + \"static/media/NewTask.dec8cad7.svg\";","module.exports = __webpack_public_path__ + \"static/media/RemoveIcon.e16637bf.svg\";"],"sourceRoot":""}